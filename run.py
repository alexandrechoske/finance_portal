#!/usr/bin/env python
"""
Script de inicializa√ß√£o para o sistema Meu Patrim√¥nio
Este script verifica as depend√™ncias e inicializa a aplica√ß√£o
"""

import os
import sys
import subprocess
from pathlib import Path

def check_python_version():
    """Verifica se a vers√£o do Python √© compat√≠vel"""
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8+ √© necess√°rio")
        sys.exit(1)
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} detectado")

def check_dependencies():
    """Verifica se as depend√™ncias est√£o instaladas"""
    try:
        import flask
        import supabase
        import dotenv
        print("‚úÖ Depend√™ncias principais encontradas")
        return True
    except ImportError as e:
        print(f"‚ùå Depend√™ncia n√£o encontrada: {e}")
        return False

def install_dependencies():
    """Instala as depend√™ncias necess√°rias"""
    print("üì¶ Instalando depend√™ncias...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ Depend√™ncias instaladas com sucesso")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå Erro ao instalar depend√™ncias")
        return False

def check_env_file():
    """Verifica se o arquivo .env existe"""
    if not Path('.env').exists():
        print("‚ö†Ô∏è  Arquivo .env n√£o encontrado")
        print("üìù Criando arquivo .env a partir do template...")
        
        if Path('.env.example').exists():
            with open('.env.example', 'r') as example:
                with open('.env', 'w') as env:
                    env.write(example.read())
            print("‚úÖ Arquivo .env criado")
            print("üîß Configure suas vari√°veis de ambiente no arquivo .env")
        else:
            print("‚ùå Arquivo .env.example n√£o encontrado")
            return False
    else:
        print("‚úÖ Arquivo .env encontrado")
    return True

def run_flask_app():
    """Executa a aplica√ß√£o Flask"""
    print("üöÄ Iniciando servidor Flask...")
    try:
        os.environ['FLASK_APP'] = 'app.py'
        os.environ['FLASK_ENV'] = 'development'
        
        # Executa o app
        from app import app
        app.run(debug=True, host='0.0.0.0', port=5000)
        
    except Exception as e:
        print(f"‚ùå Erro ao iniciar aplica√ß√£o: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üéØ Iniciando Meu Patrim√¥nio - Sistema de Gerenciamento de Portf√≥lio")
    print("=" * 60)
    
    # Verifica√ß√µes
    check_python_version()
    
    if not check_dependencies():
        if not install_dependencies():
            sys.exit(1)
    
    if not check_env_file():
        sys.exit(1)
    
    print("=" * 60)
    print("‚úÖ Todas as verifica√ß√µes passaram!")
    print("üåê Acesse: http://localhost:5000")
    print("üìö Documenta√ß√£o: README.md")
    print("=" * 60)
    
    # Executa a aplica√ß√£o
    run_flask_app()

if __name__ == "__main__":
    main()
